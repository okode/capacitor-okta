{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface OktaPlugin {\n  signIn(params?: Record<string, string>): Promise<void>;\n  signOut(): Promise<void>;\n  register(params?: Record<string, string>): Promise<void>;\n  recoveryPassword(params?: Record<string, string>): Promise<void>;\n  enableBiometric(): Promise<BiometricState>;\n  disableBiometric(): Promise<BiometricState>;\n  restartBiometric(): Promise<BiometricState>;\n  getBiometricStatus(): Promise<BiometricState>;\n  addListener(eventName: 'authState', listenerFunc: (data: AuthState) => void): PluginListenerHandle;\n}\n\nexport interface AuthState {\n  accessToken?: string;\n}\n\nexport interface BiometricState {\n  isBiometricSupported: boolean;\n  isBiometricEnabled: boolean\n}\n"]}