{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface OktaPlugin {\n  signIn(params: Record<string, string>): Promise<void>;\n  signOut(): Promise<{ value: number }>;\n  getUser(): Promise<{ [key: string]: any }>;\n  addListener(eventName: 'initSuccess', listenerFunc: (data: AuthStateDetails) => void): PluginListenerHandle;\n  // Only fired on ios\n  addListener(eventName: 'initError', listenerFunc: (error: { description?: string }) => void): PluginListenerHandle;\n  addListener(eventName: 'authState', listenerFunc: (data: AuthStateDetails) => void): PluginListenerHandle;\n}\n\nexport interface AuthStateDetails {\n  isAuthenticated: boolean;\n  accessToken?: string;\n  refreshToken?: string;\n  idToken?: string;\n}"]}